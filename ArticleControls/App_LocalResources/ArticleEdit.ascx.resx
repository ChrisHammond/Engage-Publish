<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblArticleName.Text" xml:space="preserve">
    <value>Article Name:</value>
  </data>
  <data name="lblArticleDescription.Text" xml:space="preserve">
    <value>Article Description:</value>
  </data>
  <data name="lblArticleId.Text" xml:space="preserve">
    <value>Article Id:</value>
  </data>
  <data name="submitbutton.Text" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="cmdUpdate.Text" xml:space="preserve">
    <value>Save Changes</value>
  </data>
  <data name="cmdDelete.Text" xml:space="preserve">
    <value>Delete this Article</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="cmdAdd.Text" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="lblUploadFile.Text" xml:space="preserve">
    <value>Upload New File</value>
  </data>
  <data name="lblCurrentFileName.Text" xml:space="preserve">
    <value>Current File:</value>
  </data>
  <data name="lblVersionNumber.Text" xml:space="preserve">
    <value>Version Number:</value>
  </data>
  <data name="lblVersionDescription.Text" xml:space="preserve">
    <value>Version Description</value>
  </data>
  <data name="lblDisplayTabId.Help" xml:space="preserve">
    <value>Choose which page this item should be displayed on. This list is populated with all of the pages (tabs) that have the Engage:Publish module installed, and configured to allow items from other lists to display in it, or configured to be an Article or Category Display.</value>
  </data>
  <data name="lblDisplayTabId.Text" xml:space="preserve">
    <value>Display Page:</value>
  </data>
  <data name="lblArticleId.Help" xml:space="preserve">
    <value>The ID of the article you are editing.</value>
  </data>
  <data name="lblVersionNumber.Help" xml:space="preserve">
    <value>Version Number </value>
  </data>
  <data name="lblVersionDescription.Help" xml:space="preserve">
    <value>The version description is used for administrative purposes, anything you see here will be included for reference as a change between versions of an article.</value>
  </data>
  <data name="EmbeddedArticle.Help" xml:space="preserve">
    <value>If defined, this article will be loaded in the upper right corner of the display module, allowing you to include an embedded article.</value>
  </data>
  <data name="EmbeddedArticle.Text" xml:space="preserve">
    <value>Embedded Article:</value>
  </data>
  <data name="ArticleText.Help" xml:space="preserve">
    <value>This is the main article text.</value>
  </data>
  <data name="ArticleText.Text" xml:space="preserve">
    <value>Article Body:</value>
  </data>
  <data name="ChooseOne.Text" xml:space="preserve">
    <value>[Choose One]</value>
  </data>
  <data name="MaximumLength.Text" xml:space="preserve">
    <value>The maximum length has for {0} has been exceeded. MaxLength = {1}, Current Length = {2}
</value>
  </data>
  <data name="ParentCategory.Help" xml:space="preserve">
    <value>This is the default category an article should fall under. All articles must have a parent category.</value>
  </data>
  <data name="ParentCategory.Text" xml:space="preserve">
    <value>Parent Category:</value>
  </data>
  <data name="RelatedArticles.Help" xml:space="preserve">
    <value>If this article has any related articles, choose them here.</value>
  </data>
  <data name="RelatedArticles.Text" xml:space="preserve">
    <value>Related Article Links:</value>
  </data>
  <data name="RelatedCategories.Help" xml:space="preserve">
    <value>If this article belongs in multiple categories you can define them here.</value>
  </data>
  <data name="RelatedCategories.Text" xml:space="preserve">
    <value>Related Categories:</value>
  </data>
  <data name="btnItemSearch.Text" xml:space="preserve">
    <value>search</value>
  </data>
  <data name="btnStoreRelationshipDate.Help" xml:space="preserve">
    <value>Save the dates for this item in this relationship.</value>
  </data>
  <data name="btnStoreRelationshipDate.Text" xml:space="preserve">
    <value>Save Dates</value>
  </data>
  <data name="imgRemove.Src" xml:space="preserve">
    <value>ImagePathHere</value>
  </data>
  <data name="lblAvailableCategories.Text" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="lblEndDate.Help" xml:space="preserve">
    <value>The end date for this relationship.</value>
  </data>
  <data name="lblEndDate.Text" xml:space="preserve">
    <value>End Date:</value>
  </data>
  <data name="lblItemSearch.Help" xml:space="preserve">
    <value>You can filter the available items through this search.</value>
  </data>
  <data name="lblItemSearch.Text" xml:space="preserve">
    <value>Item Search</value>
  </data>
  <data name="lblSelectedCategories.Help" xml:space="preserve">
    <value>Items selected for this relationship.</value>
  </data>
  <data name="lblSelectedCategories.Text" xml:space="preserve">
    <value>Selected</value>
  </data>
  <data name="lblStartDate.Help" xml:space="preserve">
    <value>The start date for this relationship.</value>
  </data>
  <data name="lblStartDate.Text" xml:space="preserve">
    <value>Start Date:</value>
  </data>
  <data name="ErrorApprovalStatus.Text" xml:space="preserve">
    <value>You must choose set the approval status for this item.
</value>
  </data>
  <data name="ErrorSelectCategory.Text" xml:space="preserve">
    <value>You must select at least one Category for this article.</value>
  </data>
  <data name="ErrorDisplayPage.Text" xml:space="preserve">
    <value>You must choose a page for this category to display on.</value>
  </data>
  <data name="DeleteFailure.Text" xml:space="preserve">
    <value>The article could not be deleted</value>
  </data>
  <data name="DeleteSuccess.Text" xml:space="preserve">
    <value>The article was successfully deleted</value>
  </data>
  <data name="DeleteConfirm.Text" xml:space="preserve">
    <value>Are you sure you want to delete this article?</value>
  </data>
  <data name="DeleteFailureInUse.Text" xml:space="preserve">
    <value>This article cannot be deleted because it is in use.  Please remove it from the following Article Display modules before deleting it:</value>
  </data>
  <data name="DeleteFailureIsFeatured.Text" xml:space="preserve">
    <value>The article could not be deleted because it is a featured item in the following categories:</value>
  </data>
  <data name="EMAIL_APPROVAL_BODY.Text" xml:space="preserve">
    <value>&lt;html&gt;
	&lt;body&gt;
		A new article has been marked for approval. The article named : [ENGAGEITEMNAME] 
		&lt;br /&gt;
		&lt;br /&gt;
		To view this updated version please &lt;a href=[ENGAGEITEMLINK]&gt; click here&lt;/a&gt; 
		&lt;br/ &gt;
		[ENGAGEITEMLINK]
		&lt;br /&gt;
		&lt;br /&gt;
		To view all versions of this article please &lt;a href=[ENGAGEITEMSLINK]&gt; click here&lt;/a&gt;
		&lt;br /&gt;[ENGAGEITEMSLINK] 
	&lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="EMAIL_APPROVAL_SUBJECT.Text" xml:space="preserve">
    <value>Article waiting for approval</value>
  </data>
  <data name="lblProgressUpdate.Text" xml:space="preserve">
    <value>Loading&lt;Br&gt;</value>
  </data>
  <data name="chkIncludeOtherArticlesFromSameList.Text" xml:space="preserve">
    <value>Automatically include other articles from the same Article List(s), and/or</value>
  </data>
  <data name="lblIncludeRelatedArticles.Text" xml:space="preserve">
    <value>Include Related Articles</value>
  </data>
  <data name="ApprovalStatus.Text" xml:space="preserve">
    <value>Approval Status</value>
  </data>
  <data name="chkEmailAFriend.Text" xml:space="preserve">
    <value>Email This</value>
  </data>
  <data name="chkPrinterFriendly.Text" xml:space="preserve">
    <value>Printer Friendly</value>
  </data>
  <data name="lblDisplayOptions.Text" xml:space="preserve">
    <value>Display Options:</value>
  </data>
  <data name="chkComments.Text" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="chkRatings.Text" xml:space="preserve">
    <value>Ratings</value>
  </data>
  <data name="chkUseApprovals.Text" xml:space="preserve">
    <value>Use Approvals for this Article &lt;br/&gt;</value>
  </data>
  <data name="lblNotUsingApprovals.Text" xml:space="preserve">
    <value>Approvals are turned off.  Any changes you make will appear immediately on your website.</value>
  </data>
  <data name="lblForceDisplayTab.Text" xml:space="preserve">
    <value>Force to display on selected page</value>
  </data>
  <data name="lblDisplayLocationOptions.Help" xml:space="preserve">
    <value>If you'd like to configure advanced location display options for this item you can do so here.</value>
  </data>
  <data name="lblDisplayLocationOptions.Text" xml:space="preserve">
    <value>Advanced display Location Options</value>
  </data>
  <data name="lblDisplayOnCurrentPage.Text" xml:space="preserve">
    <value>Display Page Options:</value>
  </data>
  <data name="chkReturnList.Text" xml:space="preserve">
    <value>Return To List</value>
  </data>
  <data name="ApprovalStatus.Help" xml:space="preserve">
    <value>If approvals are turned on for the current article, you can select whether you would like this to remain in an edit state or whether you would like to submit it to be approved by an administrator.  Administrators can also approve articles here.</value>
  </data>
  <data name="lblDisplayOptions.Help" xml:space="preserve">
    <value>Choose whether each of these items will display on the given article.  This overrides any settings on the specific module that is displaying the article.</value>
  </data>
  <data name="lblPostingDates.Help" xml:space="preserve">
    <value>Choose the dates that an article should start and stop displaying on the website.  If the end date is left blank, the article will continue on indefinately (until a end date is defined, or the article is archived or deleted).</value>
  </data>
  <data name="CurrentPage.Text" xml:space="preserve">
    <value>Current Page</value>
  </data>
  <data name="lblForceDisplayTab.Help" xml:space="preserve">
    <value>If checked, all requests for this article will redirect to the chosen display page.  Otherwise, only requests through itemlink.aspx will redirect to the chosen page.</value>
  </data>
  <data name="SpecificPage.Text" xml:space="preserve">
    <value>A Specific Page: </value>
  </data>
  <data name="lblPhotoGalleryAlbum.Help" xml:space="preserve">
    <value>You can choose to associate an album from the installed SimpleGallery or Ultra Media Gallery module with this article.  When the article is displayed, thumbnails from the album will be displayed alongisde the article.</value>
  </data>
  <data name="lblPhotoGalleryAlbum.Text" xml:space="preserve">
    <value>Photo Album</value>
  </data>
  <data name="SimpleGallery.Text" xml:space="preserve">
    <value>SimpleGallery</value>
  </data>
  <data name="UltraMediaGallery.Text" xml:space="preserve">
    <value>Ultra Media Gallery</value>
  </data>
  <data name="chkShowAuthor.Text" xml:space="preserve">
    <value>Show Author</value>
  </data>
  <data name="lblPublishInstructions.Text" xml:space="preserve">
    <value>Basic Engage: Publish Instructions</value>
  </data>
  <data name="shArticleEdit.Text" xml:space="preserve">
    <value>Article Edit</value>
  </data>
  <data name="shPublishInstructions.Text" xml:space="preserve">
    <value>Article Edit Instructions</value>
  </data>
  <data name="lblPreviousVersionDescription.Help" xml:space="preserve">
    <value>This is the version description that was saved with the previous version of the article you are editing. You cannot update this, it is for reference only.</value>
  </data>
  <data name="lblPreviousVersionDescription.Text" xml:space="preserve">
    <value>Previous Version Description:</value>
  </data>
  <data name="TagEntry.Help" xml:space="preserve">
    <value>Tags are another way of providing a taxonomy for items. You can separate tags by SemiColons (;) in the ext field.</value>
  </data>
  <data name="TagEntry.Text" xml:space="preserve">
    <value>Enter Tags (seperator ;):</value>
  </data>
  <data name="lblDisplayOnCurrentPage.Help" xml:space="preserve">
    <value>Choose the option for this article to display. Current Page means the article will display on the page of any lists that link to that article. Choosing a page from a dropdown list will make all system generated links point to the selected page to display the article. By checking the "Force" checkbox you will make sure that an article can only be displayed on a specific page, even if requested from another instance of Publish through the querystring.</value>
  </data>
  <data name="chkTags.Text" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="EMAIL_STATUSCHANGE_BODY.Text" xml:space="preserve">
    <value>&lt;html&gt;
	&lt;body&gt;
		A version of an article you've authored has had a status change to: [ENGAGESTATUS]
		&lt;br /&gt;
		&lt;br /&gt;
		Change made by: [ADMINNAME]
		&lt;br /&gt;
		&lt;br /&gt;

		The article named : [ENGAGEITEMNAME]
		&lt;br /&gt;
		Comments: [ENGAGEITEMCOMMENTS]
		&lt;br /&gt;
		To view this updated version please &lt;a href=[ENGAGEITEMLINK]&gt; click here&lt;/a&gt; 
		&lt;br/ &gt;
		[ENGAGEITEMLINK]
		&lt;br /&gt;
		&lt;br /&gt;
		To view all versions of this article please &lt;a href=[ENGAGEITEMSLINK]&gt; click here&lt;/a&gt;
		&lt;br /&gt;[ENGAGEITEMSLINK] 
	&lt;/body&gt;
&lt;/html&gt;</value>
  </data>
  <data name="EMAIL_STATUSCHANGE_SUBJECT.Text" xml:space="preserve">
    <value>Article Status Changed</value>
  </data>
  <data name="chkForumComments.Text" xml:space="preserve">
    <value>Forum Comments</value>
  </data>
</root>